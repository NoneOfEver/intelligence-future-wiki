---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';
import { cacheHeaders, randomInt } from '../utils';
import { Image } from 'astro:assets';
import Layout from '../layouts/Layout.astro';
import corgi from '../assets/spider.jpg';
import dog1 from '../assets/dog1.jpg';
import dog2 from '../assets/dog2.png';
import dog3 from '../assets/dog3.jpg';
import drone from '../assets/drone.jpg';
import spider2 from '../assets/spider2.jpg';
import lock from '../assets/lock.jpg'
import { getNetlifyContext } from '../utils';
 
const sampleImage = '/images/corgi.jpg';

const ctx = getNetlifyContext();
const forceWebP = ctx === 'dev';
const sampleImageSrcSet = [640, 1280, 2048]
    .map((size) => {
        return `/.netlify/images?url=${sampleImage}&w=${size}${forceWebP ? '&fm=webp' : ''} ${size}w`;
    })
    .join(', ');
const sizes = '(max-width: 1024px) 100vw, 1024px';

export const prerender = false;

const tags = ['/revalidation', 'cats-related', 'all-pets-related'];
const headers = cacheHeaders(365, tags);

Object.entries(headers).map(([k, v]) => {
    Astro.response.headers.set(k, v);
});

const explainer = `
`;
const dogtext = `
## 仿生四足机器人
* 在机械设计上，该作品仿生犬类生物，使用八自由度四足机构以给予其在复杂环境的移动能力和自身鲁棒性。同轴双带轮四杆机构的设计在减小体积，增大主动力的同时也引入了一定的抗冲击能力。
* 在电子设计上，该作品使用\`无刷电机\`配合有感驱动作为闭环驱动单元，提高了响应速度和精准度。引入\`场方向控制技术（FOC）\`以增强电机低速工况下的力矩输出表现。
* 在算法设计上，使用\`虚拟弹簧技术（VST）\`，优化了整体运动轨迹。整机搭载\`六轴运动传感器（MPU6050）\`，\`RGBD面投影深度相机\`和\`激光雷达\`，通过多传感器融合技术完成对自身和周围环境的实时感知。\`机载运算单元（Jetson Nano）\`可进行实时三维\`SLAM\`重建和\`自适应蒙特卡洛定位（AMCL）\`，并使用\`Movebase\`和\`TEB\`算法完成相应路径规划。运算单元具有神经网络运算能力，可实现三维目标检测和实时跟踪。远程终端和手机APP均可实时监测当前状态。
* 该作品源于仿生学，具有良好的应用前景，可应用在物流，安保，军工等诸多领域。
`;
const dronetext = `
## 四旋翼飞行器
* 采用\`PX4\`飞控
* 搭载\`Intel Realsense\`双目相机，能实现通过识别标志自主定位执行既定任务
* 搭载\`Nvidia Jetson NX\`作为协同计算机实现视觉识别算法和路径规划
`;
const spidertext = `
## 仿生六足机器人
* 六足以\`舵机\`为动力，\`MCU\`作为主控,搭载\`深度相机\`和\`激光雷达\`等感知组件
`;
const locktext = '';
const csgotext = '';

const devModeWarning = `
In local development, optimization is performed locally without automatic format
detection, so format is set to WebP.
`;

const exampleTag = tags[randomInt(0, tags.length - 1)];
---

<Layout title="Revalidation">
    <h1 class="mb-10">实验室科创成果</h1>
    <Markdown content={explainer} class="mb-10" />
    <div class="flex flex-col gap-12 sm:gap-16">
        <section>
            <Markdown content={dogtext} class="mb-8" />
            <figure>
                <Image src={dog1} alt="dog1" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    20级学长作品：智能四足机器人
                    站立图
                </figcaption>

            </figure>

        </section>
        <section>
            <figure>
                <Image src={dog2} alt="dog2" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    跳跃图
                </figcaption>

            </figure>
        </section>
        <section>
            <figure>
                <Image src={dog3} alt="dog3" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    内部图
                </figcaption>
            </figure>
        </section>
        <section>
            <figure>
                <Markdown content={spidertext} class="mb-8" />
                <Image src={spider2} alt="spider2" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    20级学长作品：六足机器人
                </figcaption>
   
            </figure>
        </section>
        <section>
            <figure>
                <Markdown content={dronetext} class="mb-8" />
                <Image src={drone} alt="drone" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    20级学长作品：四旋翼飞行器
                </figcaption>
   
            </figure>
        </section>
        <section>
            <figure>
                <Markdown content={dronetext} class="mb-8" />
                <Image src={lock} alt="lock" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    21级学长作品：智能网联车位锁
                </figcaption>
   
            </figure>
        </section>

    </div>

</Layout>

<script>
    function revalidate(tag: string) {
        fetch('/api/revalidate', {
            method: 'POST',
            body: JSON.stringify({ tags: [tag] }),
            headers: {
                'Content-Type': 'application/json'
            }
        });
        alert(`Invalidated tag: ${tag}`);
    }

    const revalidateButton = document.querySelectorAll('button.revalidate-button')[0];
    revalidateButton.addEventListener('click', (e) => {
        const tag = (e.target as HTMLButtonElement).getAttribute('data-tag');
        revalidate(tag);
    });
</script>
